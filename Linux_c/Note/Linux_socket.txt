Linux网络编程

1.网络开发设计模式
    1.c/s　服务器端和客户端 
    2.b/s　可以跨平台使用 http协议

2.分层模型
    1.七层:物数网传会表应
    2.四层:
        网络接口层
        网络层
        传输层
        应用层

3.新型网路地址转化函数(对IPv4和IPv6都适用)
    函数所在头文件:#include <arpa/inet.h>

    函数原型:int inet_pton(int af, const char *src, void *dst);
    函数功能:将点分十进制的ip地址转化为用网络传输的数值格式
                af:AF_INET / AF_INET6
                src:ip地址 xxx.xxx.xxx.xxx
                dst:存放转化后的结果
    函数原型:const char *inet_ntop(int af, const void *src,
                      char *dst, socklen_t size);
    函数功能:将数值格式转化为点分十进制的ip地址格式

4.TCP的三次握手(connect)
    
    标志位：
        SYN:请求建立连接
        ACK:应答
        FIN:断开链接
    
    连接需要三次握手:
        第一次握手:
            客户端:
                携带标志为SYN
                随机产生一个32位的序号:例如:1000
                    可以携带数据
            
            服务器端:
                检测SYN的值是否为1

        第二次握手:
            服务器端:
                ACK标志位+32位的确认序号
                    确认序号 = 客户端随机序号+1 例如:1001
                发起一个连接请求
                    SYN+32位随机序号 例如:2000

                客户端:
                    检测标志位:1
                    校验:确认序号是否正确
                    

        第三次握手:
                客户端:
                    发送确认数据包
                        ACK+确认序号
                            确认序号 = 服务器的随机序号+1

                服务器端:
                    检测:ACK是否为1
                    检验:确认序号是否正确

5.TCP的四次挥手
    第一次挥手:
        客户端:
            发送断开连接请求
                FIN+序号(必须要有的)
                ACK+序号
        
        服务器端:
            检测FIN值是否为1
            ack的作用告诉对方之前发的数据收到了多少








