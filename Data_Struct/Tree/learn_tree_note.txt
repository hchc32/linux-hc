一.树
						***树在计算机领域的应用***
				1.编译：用树表示源程序的语法结构
				2.数据库系统：用树组织信息
				3.算法分析：用树描述执行过程
(1)树的定义(递归定义):树是n个（n>=0）个结点的有限集
		 若n = 0,称为空树
		 若n > 0,则满足下列两个条件：
				1.有且只有一个特定的根（root）结点→(根节点没有前驱结点)；
				2.   其余结点可分为m个互不相交的有限集，其中每个集合本身又是一棵树，并称为 根的子树


(2)树的其他表示方式：嵌套集合
					  广义表
					 凹入表示
					 树
(3)树的结点：包含数据元素以及指向子树的分支
 1～节点
	包含数据元素以及指向子树的分支
2～孩子结点
3～双亲结点
	结点的子树的根称为该结点的孩子，该结点称为孩子的双亲

4～兄弟结点
	堂兄弟：双亲在同一层的结点

5～祖先结点

6～结点的度
	结点拥有的子树个数
	***树的度→树内各结点的度的最大值
7～叶子结点（终端结点）
	度为0的结点
8～分支结点（非终端结点）（内部结点）
	度不为0的结点
9～树的层数
	树的根所在结点的层数为1
	其余依次增加
10～树的深度（树的高度）
	树中结点的最大层数称为树的深度
11～森林
	零棵或有限棵互不相交的树的集合称为森林     （树一定是森林，但是森林不一定是树）
12～有序树和无序树
	如果树中结点的各子树从左到右不能交换，则成为有序树，否则，无序树
						****线性结构一对一，树结构一对多****
二.二叉树
 1～定义：
	（非线性数据结构）
	（二叉树的定义和树的定义类似是一种递归的结构）
	（所有的树都能转化为唯一对应的二叉树）
	（二叉树不是树的特殊情况，他们是两个概念）
	  是一个由结点组成的有限集合。或者为空，或者由一个称为根的结点以及两棵不相交的二叉树组成，这两棵二叉树分别成为左子树和右子树->(一定要区分)；
	从定义可看出：1.二叉树是有序树；
				    2.二叉树的结点最大的度为2；
	二叉树的特征：1.二叉树可以为空（NL），空二叉树没有任何结点；
				    2.二叉树上的每个结点最多可以有两棵子树（度最大为2），且两棵子树是不相交的；
				    3.二叉树上的一个结点的两棵子树有左，右次序是不能颠倒的;		

如下图（分别为）
1.空二叉树
2.只包含根节点的二叉树
3.包含两个结点且根节点只有左子树的二叉树
4.包含两个结点且根节点只有右子树的二叉树
5.三个节点构成的二叉树
***想一想 3个结点的二叉树共有几种形态***
    
由上图可知，有5种形态
***由此可推，n个结点的二叉树一共有几种形态？***
       2*n-1
	

2～性质：
	1.性质一：在二叉树的第i层（i>=1）,最多有2^(i-1)个结点，最少有1个结点;
	2.性质二：高为k（k>=1）的二叉树，最多有2^k-1个结点;
	                  (由性质一可知，高为k的二叉树里，第一层结点数为2^0,第二层结点数为2^1……第			    k层结点数2^(k-1)，所以最多就是等比数列求和）;
	3.性质三：如果一棵二叉树中，度为0的结点个数为n0，度为2的结点个数为n2，则n0=n2+1;
***两种特殊形态的二叉树***
	1.满二叉树(用顺序结构存储方便存储)：深度为k并且所含有2^(k-1)个结点的二叉树
				满二叉树的结点可以从根节点开始自上而下，自左而右的顺序一次编号（便于寻找每				个结点对应的序号）→( (1) 双亲的序号i/2 
									  (2) 左孩子的序号2*i
									 (3) 右孩子的序号2*i+1)
	
	2.完全二叉树：在满二叉树中，从最后一个结点开始，连续去掉任意个结点，即是一棵完全二叉树
												 （必须连续）
	特点：1.叶子只可能分布在层次最大的一层与其前一层
		    2.对任一结点，如果其右子树的最大层次为i，则其左子树的最大层次必为i或者i+1
	性质：具有n个结点的完全二叉树的深度为（log（2）n）+1……括号内的数表示不大于该数的整数
*****满二叉树一定是完全二叉树，完全二叉树不一定是满二叉树*****

3～存储实现
	1～顺序存储
		实现：按满二叉树的结点层次编号，依次存放二叉树中的数据元素
	2～链式存储
		1～二叉链表
		2～三叉链表
4～遍历二叉树（访问二叉树的每个结点并且每个结点只能访问一次）
5～哈夫曼树及编码（二叉树的应用）
